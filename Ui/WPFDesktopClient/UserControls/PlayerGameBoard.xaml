<UserControl x:Class="MichaelKoch.TicTacToe.Ui.WPFDesktopClient.UserControls.PlayerGameBoard"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:sampleData="clr-namespace:MichaelKoch.TicTacToe.Ui.WPFDesktopClient.SampleData"
             xmlns:valueConverter="clr-namespace:MichaelKoch.TicTacToe.Ui.WPFDesktopClient.ValueConverter"
             xmlns:behaviors="http://schemas.microsoft.com/xaml/behaviors"
             mc:Ignorable="d" 
             d:DesignHeight="300" d:DesignWidth="300">
    
    <d:UserControl.DataContext>
        <sampleData:PlayerGameBoardSampleData/>
    </d:UserControl.DataContext>

    <UserControl.Resources>
        <valueConverter:AreaIdGridColumnConverter x:Key="AreaIdGridColumnConverter"/>
        <valueConverter:AreaIdGridRowConverter x:Key="AreaIdGridRowConverter"/>

        <Storyboard x:Key="StartNewGameAnimation">
            <ColorAnimationUsingKeyFrames BeginTime="0:0:0" 
                                          Duration="0:0:1"
                                          Storyboard.TargetName="theXColor"
                                          Storyboard.TargetProperty="Color"
                                          FillBehavior="Stop">
                <DiscreteColorKeyFrame Value="{StaticResource TTTBackgroundLightGrayColor}" KeyTime="0:0:0"/>
                <LinearColorKeyFrame Value="{StaticResource TTTGreenColor}" KeyTime="0:0:0.2"/>
                <DiscreteColorKeyFrame Value="{StaticResource TTTGreenColor}" KeyTime="0:0:0.5"/>
                <LinearColorKeyFrame Value="{StaticResource TTTBackgroundLightGrayColor}" KeyTime="0:0:0.9"/>
            </ColorAnimationUsingKeyFrames>

            <ColorAnimationUsingKeyFrames BeginTime="0:0:0" Duration="0:0:1"
                                                            Storyboard.TargetName="theXBlurEffectColor"
                                                            Storyboard.TargetProperty="Color"
                                                            FillBehavior="Stop">
                <DiscreteColorKeyFrame Value="{StaticResource TTTBackgroundLightGrayColor}" KeyTime="0:0:0"/>
                <LinearColorKeyFrame Value="{StaticResource TTTGreenColor}" KeyTime="0:0:0.2"/>
                <DiscreteColorKeyFrame Value="{StaticResource TTTGreenColor}" KeyTime="0:0:0.5"/>
                <LinearColorKeyFrame Value="{StaticResource TTTBackgroundLightGrayColor}" KeyTime="0:0:0.9"/>
            </ColorAnimationUsingKeyFrames>

            <ColorAnimationUsingKeyFrames BeginTime="0:0:1" Duration="0:0:1"
                                                            Storyboard.TargetName="theO"
                                                            Storyboard.TargetProperty="(Path.Stroke).(SolidColorBrush.Color)"
                                                            FillBehavior="Stop">
                <DiscreteColorKeyFrame Value="{StaticResource TTTBackgroundLightGrayColor}" KeyTime="0:0:0"/>
                <LinearColorKeyFrame Value="{StaticResource TTTOrangeColor}" KeyTime="0:0:0.2"/>
                <DiscreteColorKeyFrame Value="{StaticResource TTTOrangeColor}" KeyTime="0:0:0.5"/>
                <LinearColorKeyFrame Value="{StaticResource TTTBackgroundLightGrayColor}" KeyTime="0:0:0.9"/>
            </ColorAnimationUsingKeyFrames>

            <ColorAnimationUsingKeyFrames BeginTime="0:0:1" Duration="0:0:1"
                                                            Storyboard.TargetName="theOBlurEffect"
                                                            Storyboard.TargetProperty="(Path.Stroke).(SolidColorBrush.Color)"
                                                            FillBehavior="Stop">
                <DiscreteColorKeyFrame Value="{StaticResource TTTBackgroundLightGrayColor}" KeyTime="0:0:0"/>
                <LinearColorKeyFrame Value="{StaticResource TTTOrangeColor}" KeyTime="0:0:0.2"/>
                <DiscreteColorKeyFrame Value="{StaticResource TTTOrangeColor}" KeyTime="0:0:0.5"/>
                <LinearColorKeyFrame Value="{StaticResource TTTBackgroundLightGrayColor}" KeyTime="0:0:0.9"/>
            </ColorAnimationUsingKeyFrames>

            <ColorAnimationUsingKeyFrames BeginTime="0:0:2" Duration="0:0:2"
                                                            Storyboard.TargetName="boardAreaBorder"
                                                            Storyboard.TargetProperty="(BorderBrush).(SolidColorBrush.Color)"
                                                            FillBehavior="HoldEnd">
                <DiscreteColorKeyFrame Value="{StaticResource TTTBackgroundLightGrayColor}" KeyTime="0:0:0"/>
                <LinearColorKeyFrame Value="{StaticResource TTTBlueColor}" KeyTime="0:0:2.0"/>
            </ColorAnimationUsingKeyFrames>

            <ColorAnimationUsingKeyFrames BeginTime="0:0:2" Duration="0:0:2"
                                                            Storyboard.TargetName="boardAreaBorderBlurEffect"
                                                            Storyboard.TargetProperty="(BorderBrush).(SolidColorBrush.Color)"
                                                            FillBehavior="HoldEnd">
                <DiscreteColorKeyFrame Value="{StaticResource TTTBackgroundLightGrayColor}" KeyTime="0:0:0"/>
                <LinearColorKeyFrame Value="{StaticResource TTTBlueColor}" KeyTime="0:0:2.0"/>
            </ColorAnimationUsingKeyFrames>

            <ColorAnimationUsingKeyFrames BeginTime="0:0:2" Duration="0:0:2"
                                                            Storyboard.TargetName="boardAreaLightEffect"
                                                            Storyboard.TargetProperty="(Fill).(SolidColorBrush.Color)"
                                                            FillBehavior="HoldEnd">
                <DiscreteColorKeyFrame Value="{StaticResource TTTBackgroundLightGrayColor}" KeyTime="0:0:0"/>
                <LinearColorKeyFrame Value="{StaticResource TTTBlueColor}" KeyTime="0:0:2.0"/>
            </ColorAnimationUsingKeyFrames>

            <DoubleAnimationUsingKeyFrames BeginTime="0:0:2" Duration="0:0:2"
                                                             Storyboard.TargetName="boardAreaDropShadow"
                                                             Storyboard.TargetProperty="Opacity"
                                                             FillBehavior="HoldEnd">
                <DiscreteDoubleKeyFrame KeyTime="0:0:0" Value="1.0"/>
                <LinearDoubleKeyFrame KeyTime="0:0:0.5" Value="0.0"/>
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>


        <!--+++++++ StartSaveGame Animation +++++++-->

        <Storyboard x:Key="StartSaveGameAnimation">
            <ColorAnimationUsingKeyFrames BeginTime="0:0:0" Duration="0:0:2"
                                                            Storyboard.TargetName="boardAreaBorder"
                                                            Storyboard.TargetProperty="(BorderBrush).(SolidColorBrush.Color)"
                                                            FillBehavior="HoldEnd">
                <DiscreteColorKeyFrame Value="{StaticResource TTTBackgroundLightGrayColor}" KeyTime="0:0:0"/>
                <LinearColorKeyFrame Value="{StaticResource TTTBlueColor}" KeyTime="0:0:2.0"/>
            </ColorAnimationUsingKeyFrames>

            <ColorAnimationUsingKeyFrames BeginTime="0:0:0" Duration="0:0:2"
                                                            Storyboard.TargetName="boardAreaBorderBlurEffect"
                                                            Storyboard.TargetProperty="(BorderBrush).(SolidColorBrush.Color)"
                                                            FillBehavior="HoldEnd">
                <DiscreteColorKeyFrame Value="{StaticResource TTTBackgroundLightGrayColor}" KeyTime="0:0:0"/>
                <LinearColorKeyFrame Value="{StaticResource TTTBlueColor}" KeyTime="0:0:2.0"/>
            </ColorAnimationUsingKeyFrames>

            <ColorAnimationUsingKeyFrames BeginTime="0:0:0" Duration="0:0:2"
                                                            Storyboard.TargetName="boardAreaLightEffect"
                                                            Storyboard.TargetProperty="(Fill).(SolidColorBrush.Color)"
                                                            FillBehavior="HoldEnd">
                <DiscreteColorKeyFrame Value="{StaticResource TTTBackgroundLightGrayColor}" KeyTime="0:0:0"/>
                <LinearColorKeyFrame Value="{StaticResource TTTBlueColor}" KeyTime="0:0:2.0"/>
            </ColorAnimationUsingKeyFrames>

            <DoubleAnimationUsingKeyFrames BeginTime="0:0:0" Duration="0:0:2"
                                                             Storyboard.TargetName="boardAreaDropShadow"
                                                             Storyboard.TargetProperty="Opacity"
                                                             FillBehavior="HoldEnd">
                <DiscreteDoubleKeyFrame KeyTime="0:0:0" Value="1.0"/>
                <LinearDoubleKeyFrame KeyTime="0:0:0.5" Value="0.0"/>
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>

        <!--+++++++ Animation when PlayerX win +++++++-->

        <Storyboard x:Key="WinnerXAnimation">
            <ColorAnimationUsingKeyFrames BeginTime="0:0:0" Duration="0:0:2"
                                                            Storyboard.TargetName="boardAreaBorder"
                                                            Storyboard.TargetProperty="(BorderBrush).(SolidColorBrush.Color)"
                                                            RepeatBehavior="Forever">
                <DiscreteColorKeyFrame Value="#333333" KeyTime="0:0:0"/>
                <LinearColorKeyFrame Value="#6AFF00" KeyTime="0:0:0.3"/>
                <DiscreteColorKeyFrame Value="#6AFF00" KeyTime="0:0:1"/>
                <LinearColorKeyFrame Value="#333333" KeyTime="0:0:1.8"/>
            </ColorAnimationUsingKeyFrames>
            <ColorAnimationUsingKeyFrames BeginTime="0:0:0" Duration="0:0:2"
                                                            Storyboard.TargetName="boardAreaLightEffect"
                                                            Storyboard.TargetProperty="(Fill).(SolidColorBrush.Color)"
                                                            RepeatBehavior="Forever">
                <DiscreteColorKeyFrame Value="#333333" KeyTime="0:0:0"/>
                <LinearColorKeyFrame Value="#6AFF00" KeyTime="0:0:0.3"/>
                <DiscreteColorKeyFrame Value="#6AFF00" KeyTime="0:0:1"/>
                <LinearColorKeyFrame Value="#333333" KeyTime="0:0:1.8"/>
            </ColorAnimationUsingKeyFrames>
            <ColorAnimationUsingKeyFrames BeginTime="0:0:0" Duration="0:0:2"
                                                            Storyboard.TargetName="boardAreaBorderBlurEffect"
                                                            Storyboard.TargetProperty="(BorderBrush).(SolidColorBrush.Color)"
                                                            RepeatBehavior="Forever">
                <DiscreteColorKeyFrame Value="#333333" KeyTime="0:0:0"/>
                <LinearColorKeyFrame Value="#6AFF00" KeyTime="0:0:0.3"/>
                <DiscreteColorKeyFrame Value="#6AFF00" KeyTime="0:0:1"/>
                <LinearColorKeyFrame Value="#333333" KeyTime="0:0:1.8"/>
            </ColorAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames BeginTime="0:0:0" Duration="0:0:2"
                                                             Storyboard.TargetName="boardAreaDropShadow"
                                                             Storyboard.TargetProperty="Opacity"
                                                             RepeatBehavior="Forever">
                <DiscreteDoubleKeyFrame KeyTime="0:0:0" Value="1.0"/>
                <LinearDoubleKeyFrame KeyTime="0:0:0.3" Value="0.0"/>
                <DiscreteDoubleKeyFrame KeyTime="0:0:1" Value="0.0"/>
                <LinearDoubleKeyFrame KeyTime="0:0:1.8" Value="1.0"/>
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>

        <!--+++++++ Animation when PlayerO win +++++++-->

        <Storyboard x:Key="WinnerOAnimation">
            <ColorAnimationUsingKeyFrames BeginTime="0:0:0" Duration="0:0:2"
                                                            Storyboard.TargetName="boardAreaBorder"
                                                            Storyboard.TargetProperty="(BorderBrush).(SolidColorBrush.Color)"
                                                            RepeatBehavior="Forever">
                <DiscreteColorKeyFrame Value="#333333" KeyTime="0:0:0"/>
                <LinearColorKeyFrame Value="#FF4F00" KeyTime="0:0:0.3"/>
                <DiscreteColorKeyFrame Value="#FF4F00" KeyTime="0:0:1"/>
                <LinearColorKeyFrame Value="#333333" KeyTime="0:0:1.8"/>
            </ColorAnimationUsingKeyFrames>
            <ColorAnimationUsingKeyFrames BeginTime="0:0:0" Duration="0:0:2"
                                                            Storyboard.TargetName="boardAreaLightEffect"
                                                            Storyboard.TargetProperty="(Fill).(SolidColorBrush.Color)"
                                                            RepeatBehavior="Forever">
                <DiscreteColorKeyFrame Value="#333333" KeyTime="0:0:0"/>
                <LinearColorKeyFrame Value="#FF4F00" KeyTime="0:0:0.3"/>
                <DiscreteColorKeyFrame Value="#FF4F00" KeyTime="0:0:1"/>
                <LinearColorKeyFrame Value="#333333" KeyTime="0:0:1.8"/>
            </ColorAnimationUsingKeyFrames>
            <ColorAnimationUsingKeyFrames BeginTime="0:0:0" Duration="0:0:2"
                                                            Storyboard.TargetName="boardAreaBorderBlurEffect"
                                                            Storyboard.TargetProperty="(BorderBrush).(SolidColorBrush.Color)"
                                                            RepeatBehavior="Forever">
                <DiscreteColorKeyFrame Value="#333333" KeyTime="0:0:0"/>
                <LinearColorKeyFrame Value="#FF4F00" KeyTime="0:0:0.3"/>
                <DiscreteColorKeyFrame Value="#FF4F00" KeyTime="0:0:1"/>
                <LinearColorKeyFrame Value="#333333" KeyTime="0:0:1.8"/>
            </ColorAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames BeginTime="0:0:0" Duration="0:0:2"
                                                             Storyboard.TargetName="boardAreaDropShadow"
                                                             Storyboard.TargetProperty="Opacity"
                                                             RepeatBehavior="Forever">
                <DiscreteDoubleKeyFrame KeyTime="0:0:0" Value="1.0"/>
                <LinearDoubleKeyFrame KeyTime="0:0:0.3" Value="0.0"/>
                <DiscreteDoubleKeyFrame KeyTime="0:0:1" Value="0.0"/>
                <LinearDoubleKeyFrame KeyTime="0:0:1.8" Value="1.0"/>
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>

        <Storyboard x:Key="IsOccupiedMouseOverAnimation">
            <ColorAnimation Storyboard.TargetName="boardAreaBorder"
                            Storyboard.TargetProperty="(BorderBrush).(SolidColorBrush.Color)"
                            Duration="0"
                            To="{StaticResource TTTRedColor}"/>
        </Storyboard>

        <Storyboard x:Key="IsOccupiedMouseAwayAnimation">
            <ColorAnimation Storyboard.TargetName="boardAreaBorder"
                            Storyboard.TargetProperty="(BorderBrush).(SolidColorBrush.Color)"
                            Duration="0"
                            To="{StaticResource TTTBlueColor}"/>
        </Storyboard>

        <Storyboard x:Key="IsOccupiedIsPressedAnimation">
            <ColorAnimation Storyboard.TargetName="boardAreaLightEffect"
                            Storyboard.TargetProperty="(Fill).(SolidColorBrush.Color)"
                            Duration="0"
                            To="{StaticResource TTTRedColor}"/>

            <ColorAnimation Storyboard.TargetName="boardAreaBorderBlurEffect"
                            Storyboard.TargetProperty="(BorderBrush).(SolidColorBrush.Color)"
                            Duration="0"
                            To="{StaticResource TTTRedColor}"/>
        </Storyboard>

        <Storyboard x:Key="IsOccupiedReleaseAnimation">
            <ColorAnimation Storyboard.TargetName="boardAreaLightEffect"
                            Storyboard.TargetProperty="(Fill).(SolidColorBrush.Color)"
                            Duration="0"
                            To="{StaticResource TTTBlueColor}"/>

            <ColorAnimation Storyboard.TargetName="boardAreaBorderBlurEffect"
                            Storyboard.TargetProperty="(BorderBrush).(SolidColorBrush.Color)"
                            Duration="0"
                            To="{StaticResource TTTBlueColor}"/>
        </Storyboard>

        <Style TargetType="Button">
            <Setter Property="OverridesDefaultStyle" Value="True"/>
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="Margin" Value="10"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="5"/>
            <Setter Property="Command" Value="{Binding}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="1">
                            <Rectangle Fill="Transparent"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <DataTemplate x:Key="GameBoardAreaDataTemplate" 
                      DataType="{x:Type sampleData:PlayerGameBoardAreaSampleData}">

            <Grid>
                <Rectangle x:Name="boardAreaLightEffect" 
                           Margin="5" Opacity="0.7" 
                           Fill="Transparent">
                    <Rectangle.Effect>
                        <BlurEffect Radius="20"/>
                    </Rectangle.Effect>
                </Rectangle>
                <Rectangle x:Name="boardArea"
                           Margin="10" RadiusX="2" RadiusY="2"
                           Fill="{StaticResource TTTBackgroundDarkGrey}">

                </Rectangle>
                <Rectangle x:Name="boardAreaDropShadow"
                           Margin="10" 
                           Fill="{StaticResource TTTBackgroundDarkGrey}">
                    <Rectangle.Effect>
                        <DropShadowEffect ShadowDepth="10"/>
                    </Rectangle.Effect>
                </Rectangle>
                <Border x:Name="boardAreaBorderBlurEffect" 
                        BorderThickness="5" Margin="10" CornerRadius="2" 
                        Opacity="0.5" 
                        BorderBrush="Transparent">
                    <Border.Effect>
                        <BlurEffect Radius="20"/>
                    </Border.Effect>
                </Border>
                <Border x:Name="boardAreaBorder" 
                        Margin="10" BorderThickness="4" CornerRadius="1"
                        BorderBrush="{StaticResource TTTBackgroundLightGray}">
                </Border>
                <Viewbox Stretch="Fill" Margin="28">
                    <Path x:Name="theOBackground" 
                          StrokeThickness="6" 
                          Stroke="{StaticResource TTTBackgroundLightGray}">
                        <Path.Data>
                            <EllipseGeometry Center="25, 25" RadiusX="22" RadiusY="22"/>
                        </Path.Data>
                    </Path>
                </Viewbox>
                <Viewbox Stretch="Fill" Margin="25">
                    <Path x:Name="theXBackground" 
                          StrokeThickness="7" StrokeStartLineCap="Round" StrokeEndLineCap="Round"
                          Stroke="{StaticResource TTTBackgroundLightGray}">
                        <Path.Data>
                            <GeometryGroup>
                                <LineGeometry StartPoint="4, 4" EndPoint="60, 60"/>
                                <LineGeometry StartPoint="4, 60" EndPoint="60, 4"/>
                            </GeometryGroup>
                        </Path.Data>
                    </Path>
                </Viewbox>
                <Viewbox Stretch="Fill" Margin="25">
                    <Path x:Name="theX" 
                          StrokeThickness="7" StrokeStartLineCap="Round" StrokeEndLineCap="Round">
                        <Path.Stroke>
                            <SolidColorBrush x:Name="theXColor" Color="Transparent"/>
                        </Path.Stroke>
                        <Path.Data>
                            <GeometryGroup>
                                <LineGeometry StartPoint="4, 4" EndPoint="60, 60"/>
                                <LineGeometry StartPoint="4, 60" EndPoint="60, 4"/>
                            </GeometryGroup>
                        </Path.Data>
                    </Path>
                </Viewbox>
                <Viewbox Stretch="Fill" Margin="25">
                    <Path x:Name="theXBlurEffect" 
                          StrokeThickness="8" StrokeStartLineCap="Round" StrokeEndLineCap="Round">
                        <Path.Stroke>
                            <SolidColorBrush x:Name="theXBlurEffectColor" Color="Transparent"/>
                        </Path.Stroke>
                        <Path.Data>
                            <GeometryGroup>
                                <LineGeometry StartPoint="4, 4" EndPoint="60, 60"/>
                                <LineGeometry StartPoint="4, 60" EndPoint="60, 4"/>
                            </GeometryGroup>
                        </Path.Data>
                        <Path.Effect>
                            <BlurEffect Radius="15"/>
                        </Path.Effect>
                    </Path>
                </Viewbox>
                <Viewbox Stretch="Fill" Margin="28">
                    <Path x:Name="theO" 
                          StrokeThickness="6" 
                          Stroke="Transparent">
                        <Path.Data>
                            <EllipseGeometry Center="25, 25" RadiusX="22" RadiusY="22"/>
                        </Path.Data>
                    </Path>
                </Viewbox>
                <Viewbox Stretch="Fill" Margin="28">
                    <Path x:Name="theOBlurEffect" 
                          StrokeThickness="6" 
                          Stroke="Transparent">
                        <Path.Data>
                            <EllipseGeometry Center="25, 25" RadiusX="22" RadiusY="22"/>
                        </Path.Data>
                        <Path.Effect>
                            <BlurEffect Radius="15"/>
                        </Path.Effect>
                    </Path>
                </Viewbox>
                <Button Command="{Binding Path=AreaWasClickedCommand}"
                        x:Name="AreaButton">
                    <behaviors:Interaction.Triggers>
                        <behaviors:EventTrigger EventName="MouseEnter" SourceName="AreaButton">
                            <behaviors:InvokeCommandAction Command="{Binding Path=MouseEnterForShowIsOccupiedCommand}"/>
                        </behaviors:EventTrigger>
                    </behaviors:Interaction.Triggers>
                </Button>
            </Grid>

            <DataTemplate.Triggers>
                <DataTrigger Binding="{Binding IsStartNewGameAnimation}"  Value="true">
                    <DataTrigger.EnterActions>
                        <BeginStoryboard Storyboard="{StaticResource StartNewGameAnimation}"
                                         Name="BeginStartNewGameAnimation">
                        </BeginStoryboard>
                    </DataTrigger.EnterActions>
                </DataTrigger>
                <DataTrigger Binding="{Binding IsStartNewGameAnimation}" Value="false">
                    <DataTrigger.EnterActions>
                        <StopStoryboard BeginStoryboardName="BeginStartNewGameAnimation"></StopStoryboard>
                    </DataTrigger.EnterActions>
                </DataTrigger>
                <DataTrigger Binding="{Binding IsStartSaveGameAnimation}" Value="true">
                    <DataTrigger.EnterActions>
                        <BeginStoryboard Storyboard="{StaticResource StartSaveGameAnimation}"/>
                    </DataTrigger.EnterActions>
                </DataTrigger>
                <DataTrigger Binding="{Binding Token, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Value="X">
                    <Setter Property="Path.Stroke" Value="{StaticResource TTTGreen}" TargetName="theX"/>
                    <Setter Property="Path.Stroke" Value="{StaticResource TTTGreen}" TargetName="theXBlurEffect"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding Token}" Value="O">
                    <Setter Property="Path.Stroke" Value="{StaticResource TTTOrange}" TargetName="theO"/>
                    <Setter Property="Path.Stroke" Value="{StaticResource TTTOrange}" TargetName="theOBlurEffect"/>
                </DataTrigger>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding ElementName=AreaButton, Path=IsMouseOver}" Value="true"/>
                        <Condition Binding="{Binding Path=IsOccupied}" Value="true"/>
                        <Condition Binding="{Binding Path=CanShowIsOccupied}" Value="true"/>
                    </MultiDataTrigger.Conditions>
                    <MultiDataTrigger.EnterActions>
                        <BeginStoryboard Storyboard="{StaticResource IsOccupiedMouseOverAnimation}">
                        </BeginStoryboard>
                    </MultiDataTrigger.EnterActions>
                    <MultiDataTrigger.ExitActions>
                        <BeginStoryboard Storyboard="{StaticResource IsOccupiedMouseAwayAnimation}"
                                         Name="BeginIsOccupiedMouseAwayAnimation">
                        </BeginStoryboard>
                    </MultiDataTrigger.ExitActions>
                </MultiDataTrigger>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding ElementName=AreaButton, Path=IsMouseOver}" Value="true" />
                        <Condition Binding="{Binding ElementName=AreaButton, Path=IsPressed}" Value="true" />
                        <Condition Binding="{Binding Path=IsOccupied}" Value="true"/>
                    </MultiDataTrigger.Conditions>
                    <MultiDataTrigger.EnterActions>
                        <SoundPlayerAction Source="/UserControls/Assets/area_denied.wav"></SoundPlayerAction>
                        <BeginStoryboard Storyboard="{StaticResource IsOccupiedIsPressedAnimation}">
                        </BeginStoryboard>
                    </MultiDataTrigger.EnterActions>
                    <MultiDataTrigger.ExitActions>
                        <BeginStoryboard Storyboard="{StaticResource IsOccupiedReleaseAnimation}"
                                         Name="BeginIsOccupiedReleaseAnimation"/>
                    </MultiDataTrigger.ExitActions>
                </MultiDataTrigger>
                <DataTrigger Binding="{Binding Path=IsInGame}" Value="false">
                    <DataTrigger.EnterActions>
                        <StopStoryboard BeginStoryboardName="BeginIsOccupiedMouseAwayAnimation"/>
                        <StopStoryboard BeginStoryboardName="BeginIsOccupiedReleaseAnimation"/>
                    </DataTrigger.EnterActions>
                </DataTrigger>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding IsWinArea, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Value="true"/>
                        <Condition Binding="{Binding Token, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Value="X"/>
                    </MultiDataTrigger.Conditions>
                    <MultiDataTrigger.EnterActions>
                        <BeginStoryboard Storyboard="{StaticResource WinnerXAnimation}"
                                         x:Name="WinnerXAnimation">
                        </BeginStoryboard>
                    </MultiDataTrigger.EnterActions>
                </MultiDataTrigger>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding IsWinArea, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Value="true"/>
                        <Condition Binding="{Binding Token, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Value="O"/>
                    </MultiDataTrigger.Conditions>
                    <MultiDataTrigger.EnterActions>
                        <BeginStoryboard Storyboard="{StaticResource WinnerOAnimation}"
                                         x:Name="WinnerOAnimation">
                        </BeginStoryboard>
                    </MultiDataTrigger.EnterActions>
                </MultiDataTrigger>
                <DataTrigger Binding="{Binding IsWinArea, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Value="False">
                    <DataTrigger.EnterActions>
                        <StopStoryboard BeginStoryboardName="WinnerOAnimation"/>
                        <StopStoryboard BeginStoryboardName="WinnerXAnimation"/>
                    </DataTrigger.EnterActions>
                </DataTrigger>
            </DataTemplate.Triggers>
        </DataTemplate>
    </UserControl.Resources>

    <Grid>
        <ItemsControl ItemsSource="{Binding Areas}"
                      ItemTemplate="{StaticResource GameBoardAreaDataTemplate}"
                      Background="{StaticResource TTTBackgroundDarkGrey}"
                      x:Name="PlayerGameBoardControl">
            <ItemsControl.ItemsPanel>
                <ItemsPanelTemplate>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                            <ColumnDefinition/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>
                    </Grid>
                </ItemsPanelTemplate>
            </ItemsControl.ItemsPanel>
            <ItemsControl.ItemContainerStyle>
                <Style>
                    <Setter Property="Grid.Row" Value="{Binding Path=Id, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource AreaIdGridRowConverter}}"/>
                    <Setter Property="Grid.Column" Value="{Binding Path=Id, Mode=TwoWay,UpdateSourceTrigger=PropertyChanged, Converter={StaticResource AreaIdGridColumnConverter}}"/>
                </Style>
            </ItemsControl.ItemContainerStyle>
        </ItemsControl>
    </Grid>

    <behaviors:Interaction.Triggers>
        <behaviors:EventTrigger EventName="Completed" SourceObject="{Binding Source={StaticResource StartNewGameAnimation}}">
            <behaviors:InvokeCommandAction Command="{Binding GameBoardStartAnimationCompletedCommand}"/>
        </behaviors:EventTrigger>
    </behaviors:Interaction.Triggers>

</UserControl>
